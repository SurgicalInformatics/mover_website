{
  "hash": "df7aea8aaf8566e90e4b57514cf14e25",
  "result": {
    "markdown": "---\ntitle: \"Logistic regression baseline model of respiratory complications\"\nformat: html\neditor: visual\nexecute:\n  freeze: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(finalfit)\nlibrary(purrr)\nlibrary(glmnet)\nlibrary(recipes)\nlibrary(yardstick)\ntheme_set(theme_bw())\n\n#source(\"01_read_clean.R\")\n#source(\"../repos/mover_website/functions.R\")\nsource(\"functions.R\")\n```\n:::\n\n\n# Introduction\n\nWe use the prepared and imputed data from Baseline model preparation and develop a logistic regression model of respiratory complications based on basic patient information. As a comparison we also develop a model including information from the patient LDA data set which details lines, drains, and airway devices used on the patient.\n\nNote that inpatients and outpatients are included and their status included as an explanatory variable. We also take no account of the surgical procedure at this stage.\n\nWe will perform the following analysis steps:\n\n-   Import imputed data\n\n-   Define sets of explanatory variables\n\n-   Fit Lasso regularized models and examine the cross validated regularization paths.\n\n-   Examine the variables that are used at the optimal regularization strength\n\n-   Evaluate performance with ROC and PR curves.\n\n## Import imputed data\n\nThese imputed date were generated in the Baseline model preparation script.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#sets_train = read_rds(\"./results/mice_train.rds\")\n#sets_test = read_rds(\"./results/mice_test.rds\")\n#\n#data_train = read_rds(\"./results/train_set.rds\")\n#data_test = read_rds(\"./results/test_set.rds\")\n\n\nsets_train = read_rds(\"/home/common/mover_data/results/baseline_imputation/mice_train.rds\")\nsets_test = read_rds(\"/home/common/mover_data/results/baseline_imputation/mice_test.rds\")\n\ndata_train = read_rds(\"/home/common/mover_data/results/baseline_imputation/train_set.rds\")\ndata_test = read_rds(\"/home/common/mover_data/results/baseline_imputation/test_set.rds\")\n```\n:::\n\n\n## Exaplanatory variables\n\nWe define two stes of explanatory variables. One based only on patient information and another that also includes LDA information:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndependent = \"respiratory_comp\"\nindependent_all = c(\n  \n  \"icu_admin_flag\",\n  \"age\",\n  \"height_cm\",\n  \"weight\",\n  \"sex\",\n  \n  \"primary_anes_type_nm\",\n  \"asa_rating_c\",\n  \n  \"patient_class_group\",\n  \n  \"piv_line\",\n  \"wound\",\n  \"urinary_drainage\",           \n  \"art_line\",\n  \"airway\",\n  \"cvc_line\",\n  \n  \"drain\",\n  \"wound_therapy\",\n  \"picc_line\",\n  \n  \"pressure_ulcer_injury\",\n  \"line_type\",\n  \"nasogastric_orogastric_tube\",\n  \n  \"extravasation\",\n  \"epidural_line\",\n  \"intraosseous_line\"\n)\n  \n\nindependent_basic = c(\n  \n  \"icu_admin_flag\",\n  \"age\",\n  \"height_cm\",\n  \"weight\",\n  \"sex\",\n  \n  \"primary_anes_type_nm\",\n  \"asa_rating_c\",\n  \n  \"patient_class_group\"\n)\n```\n:::\n\n\nSummary table:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_train %>% summary_factorlist(dependent = dependent, explanatory = independent_all) %>% \n  mydt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-31aff9f0319376e43fae\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-31aff9f0319376e43fae\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"extensions\":[\"Buttons\"],\"data\":[[\"icu_admin_flag\",\"\",\"age\",\"height_cm\",\"weight\",\"sex\",\"\",\"primary_anes_type_nm\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"asa_rating_c\",\"patient_class_group\",\"\",\"piv_line\",\"wound\",\"urinary_drainage\",\"art_line\",\"airway\",\"cvc_line\",\"drain\",\"wound_therapy\",\"picc_line\",\"pressure_ulcer_injury\",\"line_type\",\"nasogastric_orogastric_tube\",\"\",\"\",\"\",\"extravasation\",\"\",\"\",\"epidural_line\",\"intraosseous_line\",\"\"],[\"No\",\"Yes\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"Female\",\"Male\",\"Epidural\",\"General\",\"Local\",\"None\",\"Regional\",\"Spinal\",\"Topical\",\"moderate_sedation\",\"monitored_anesthesia_care\",\"patient_choice_on_day\",\"Mean (SD)\",\"Inpatient\",\"Outpatient\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"Mean (SD)\",\"0\",\"1\",\"2\",\"3\",\"0\",\"1\",\"2\",\"Mean (SD)\",\"0\",\"1\"],[\"24311 (54.6)\",\"20250 (45.4)\",\"55.2 (17.5)\",\"168.4 (10.8)\",\"2786.9 (771.1)\",\"20880 (46.9)\",\"23681 (53.1)\",\"222 (0.5)\",\"36047 (80.9)\",\"248 (0.6)\",\"155 (0.3)\",\"1869 (4.2)\",\"84 (0.2)\",\"2 (0.0)\",\"2419 (5.4)\",\"3473 (7.8)\",\"22 (0.0)\",\"2.7 (0.8)\",\"29123 (65.4)\",\"15438 (34.6)\",\"1.9 (2.1)\",\"1.9 (2.9)\",\"0.7 (0.9)\",\"0.1 (0.5)\",\"0.1 (0.5)\",\"0.2 (0.7)\",\"1.9 (3.5)\",\"0.1 (0.7)\",\"0.1 (0.3)\",\"0.1 (0.6)\",\"0.1 (0.4)\",\"44406 (99.7)\",\"142 (0.3)\",\"12 (0.0)\",\"1 (0.0)\",\"44530 (99.9)\",\"30 (0.1)\",\"1 (0.0)\",\"0.0 (0.2)\",\"44554 (100.0)\",\"7 (0.0)\"],[\"102 (25.2)\",\"303 (74.8)\",\"56.1 (16.6)\",\"170.1 (11.1)\",\"3133.1 (965.2)\",\"154 (38.0)\",\"251 (62.0)\",\"1 (0.2)\",\"338 (83.5)\",\"3 (0.7)\",\"\",\"11 (2.7)\",\"\",\"\",\"14 (3.5)\",\"37 (9.1)\",\"1 (0.2)\",\"3.2 (0.7)\",\"326 (80.5)\",\"79 (19.5)\",\"3.1 (2.7)\",\"4.7 (6.3)\",\"2.4 (5.0)\",\"0.2 (0.6)\",\"0.4 (0.9)\",\"0.4 (0.9)\",\"7.3 (11.5)\",\"1.5 (4.3)\",\"0.3 (0.5)\",\"0.2 (0.5)\",\"0.1 (0.4)\",\"403 (99.5)\",\"2 (0.5)\",\"0 (0.0)\",\"0 (0.0)\",\"402 (99.3)\",\"3 (0.7)\",\"0 (0.0)\",\"0.0 (0.3)\",\"405 (100.0)\",\"0 (0.0)\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>label<\\/th>\\n      <th>levels<\\/th>\\n      <th>No<\\/th>\\n      <th>Yes<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"autoWidth\":true,\"scrollX\":true,\"searchHighlight\":true,\"columnDefs\":[],\"order\":[],\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[10,20,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code}\n#data_train %>% ff_glimpse()\n```\n:::\n\n\n## Fit lasso-regularized logistic regression model\n\nLogistic regression with only patient information explanatory variables:\n\n\n::: {.cell warining='false'}\n\n```{.r .cell-code}\n#test= sets_train %>% complete(\"all\")\n\nlasso_out_basic = sets_train %>%\n  complete(\"all\") %>% \n  map(function(.x){\n    \n    # Define X and y\n    .x %>% \n      #complete() %>% \n      select(dependent, all_of(independent_basic)) %>% \n      drop_na() %>% \n      recipe(respiratory_comp ~ .) %>% \n      step_normalize(all_numeric()) %>% \n      step_dummy(all_nominal(), -respiratory_comp) %>%\n      step_naomit(everything()) %>% \n      prep() %>% \n      juice() %T>%\n      {X <<- select(., -respiratory_comp) %>% as.matrix()} %>% \n      {y <<- pull(., respiratory_comp) %>% as.numeric() %>% {. - 1}}\n    \n    # Fit\n    fits = glmnet(X, y, \n                  family = \"binomial\", maxit = 2000, \n                  standardize = T)\n    \n    # K-fold CV, nfolds = 10\n    cv.fits = cv.glmnet(X, y, standardize = TRUE,\n                        family = \"binomial\", maxit = 2000,\n                        type.measure = \"auc\")\n    \n    #opt.lam = c(cv.fits$lambda.min, cv.fits$lambda.1se)\n    opt.lam = cv.fits$lambda.min\n    \n    list(\"fit\" = fits, \n         \"cv\" = cv.fits, \n         \"opt.lam\" = opt.lam)\n  }\n  )\n\n#lasso_out_basic %>% \n#  write_rds(\"/home/common/mover_data/results/baseline_model/lasso_out_basic.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\nWe also fit a model based on the patient info+LDA:\n\n\n::: {.cell waring='false'}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nThe cross-validated performance per regularization strength for the patient info model (only three variables used at peak performance):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlasso_out_basic[[1]]$cv %>% plot()\n```\n\n::: {.cell-output-display}\n![](baseline_LR_model_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nThe cross-validated performance per regularization strength for the patient info_LDA model:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlasso_out_all[[1]]$cv %>% plot()\n```\n\n::: {.cell-output-display}\n![](baseline_LR_model_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nThe model based only on patient info uses only weight, asa ratng, and the indicator of ICU admission at optimal regularization strength (showing all variables that have non-zero coefficents in more than half of mice imputation replicates):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlasso_out_basic %>% \n  map(function(fit){\n    fit$fit %>% \n      coef(s=fit$opt.lam) %>% \n      as.matrix() %>% \n      as.data.frame()\n  }) %>% \n  bind_cols() %>%\n  rownames_to_column(\"row_names\") %>% \n  rowwise() %>%\n  mutate(frac_zero = sum(c_across(-row_names ) == 0)/(ncol(.)-1) ) %>% \n  filter(frac_zero<0.5) %>% \n  select(-frac_zero) %>% \n  rowwise() %>%\n  mutate(pooled_coef = mean(c_across(-all_of(c(\"row_names\")) ))) %>% \n  select(row_names, pooled_coef) %>% \n  arrange(pooled_coef) %>% \n  mydt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-ab8897baa515ebca3a36\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ab8897baa515ebca3a36\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"-5.27612154603317\\\" data-max=\\\"0.754116626305009\\\" data-scale=\\\"15\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"extensions\":[\"Buttons\"],\"data\":[[\"(Intercept)\",\"weight\",\"asa_rating_c\",\"icu_admin_flag_Yes\"],[-5.276121546033175,0.2621449610298097,0.3720488184035755,0.754116626305009]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>row_names<\\/th>\\n      <th>pooled_coef<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"autoWidth\":true,\"scrollX\":true,\"searchHighlight\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1}],\"order\":[],\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[10,20,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nThe model that also includes LDA uses the following variables at optimal regularization strength (again, showing all variables that have non-zero coefficents in more than half of mice imputation replicates):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlasso_out_all %>% \n  map(function(fit){\n    fit$fit %>% \n      coef(s=fit$opt.lam) %>% \n      as.matrix() %>% \n      as.data.frame()\n  }) %>% \n  bind_cols() %>%\n  rownames_to_column(\"row_names\") %>% \n  rowwise() %>%\n  mutate(frac_zero = sum(c_across(-row_names ) == 0)/(ncol(.)-1) ) %>% \n  filter(frac_zero<0.5) %>% \n  select(-frac_zero) %>% \n  rowwise() %>%\n  mutate(pooled_coef = mean(c_across(-row_names ) )) %>% \n  select(row_names, pooled_coef) %>% \n  arrange(pooled_coef) %>% \n  mydt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-1de4efee5ff84df45f64\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1de4efee5ff84df45f64\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"-5.55079670622297\\\" data-max=\\\"1.3454461895558\\\" data-scale=\\\"15\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"extensions\":[\"Buttons\"],\"data\":[[\"(Intercept)\",\"primary_anes_type_nm_None\",\"primary_anes_type_nm_Spinal\",\"primary_anes_type_nm_moderate_sedation\",\"art_line\",\"pressure_ulcer_injury\",\"primary_anes_type_nm_Local\",\"cvc_line\",\"line_type\",\"nasogastric_orogastric_tube\",\"intraosseous_line\",\"wound\",\"piv_line\",\"primary_anes_type_nm_General\",\"picc_line\",\"extravasation\",\"wound_therapy\",\"epidural_line\",\"airway\",\"urinary_drainage\",\"sex_Male\",\"patient_class_group_Outpatient\",\"weight\",\"drain\",\"primary_anes_type_nm_monitored_anesthesia_care\",\"asa_rating_c\",\"icu_admin_flag_Yes\",\"primary_anes_type_nm_patient_choice_on_day\"],[-5.550796706222968,-0.5199429204414073,-0.2858952215054452,-0.2657069095355149,-0.1785152319266275,-0.1603338100636321,-0.1360300645130974,-0.07640309127279155,-0.03976455106206177,-0.0152891655388194,-0.01114776342011181,-0.009371294904775368,0.0178458646689979,0.0202804615991858,0.02451312994027931,0.03179473254035077,0.03501713029343863,0.03835380312896423,0.07961849450746267,0.131528730903258,0.1659598866894842,0.1972339037865309,0.2384655992127352,0.2848464175545266,0.2993775237961483,0.392355533374969,0.6032776259204045,1.345446189555797]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>row_names<\\/th>\\n      <th>pooled_coef<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"autoWidth\":true,\"scrollX\":true,\"searchHighlight\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1}],\"order\":[],\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[10,20,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## Make predictions on the hold-out test set:\n\nMake predictions based on patient information only model:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred_basic = map2(lasso_out_basic, sets_test %>% complete(\"all\"),\n                  function(lasso, X_in){\n                    X = X_in %>% \n                      select(dependent, all_of(independent_basic)) %>%\n                      drop_na() %>% \n                      recipe(respiratory_comp ~ .) %>% \n                      step_normalize(all_numeric()) %>% \n                      step_dummy(all_nominal(), -respiratory_comp) %>%\n                      step_naomit(everything()) %>% \n                      prep() %>% \n                      juice() %>%\n                      mutate(y = respiratory_comp %>%  as.numeric() %>% {. - 1}) %>%\n                      select(., -respiratory_comp) %>% \n                      as.matrix()\n\n                    pred = predict(\n                      lasso$fit,\n                      X,\n                      s = lasso$opt.lam,\n                      type = \"response\",  #c(\"link\", \"response\", \"coefficients\", \"nonzero\")\n                      )\n                 \n                    out = bind_cols(pred, X %>% \n                                      as.data.frame() %>% \n                                      select(y)) %>% \n                      dplyr::rename(\"prediction\" = \"s1\", \"truth\" = \"y\") %>% \n                      mutate(truth = factor(truth))\n                  })\n```\n:::\n\n\nMake predictions based on patient information + LDA model:\n\n\n::: {.cell warining='false'}\n\n```{.r .cell-code}\npred_all = map2(lasso_out_all, sets_test %>% complete(\"all\"),\n                  function(lasso, X_in){\n                    X = X_in %>% \n                      select(dependent, all_of(independent_all)) %>%\n                      drop_na() %>% \n                      recipe(respiratory_comp ~ .) %>% \n                      step_normalize(all_numeric()) %>% \n                      step_dummy(all_nominal(), -respiratory_comp) %>%\n                      step_naomit(everything()) %>% \n                      prep() %>% \n                      juice() %>%\n                      mutate(y = respiratory_comp %>%  as.numeric() %>% {. - 1}) %>%\n                      select(., -respiratory_comp) %>% \n                      as.matrix()\n\n                    pred = predict(\n                      lasso$fit,\n                      X,\n                      s = lasso$opt.lam,\n                      type = \"response\",  #c(\"link\", \"response\", \"coefficients\", \"nonzero\")\n                      )\n                 \n                    out = bind_cols(pred, X %>% \n                                      as.data.frame() %>% \n                                      select(y)) %>% \n                      dplyr::rename(\"prediction\" = \"s1\", \"truth\" = \"y\") %>% \n                      mutate(truth = factor(truth))\n                  })\n```\n:::\n\n\n\nConfusion:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthresh = 0.005\n\npred_basic[[1]] %>% \n  mutate(TP = case_when(\n    (prediction > thresh) & (truth == 1) ~ 1,\n    TRUE ~ 0)) %>% \n  mutate(FP = case_when(\n    (prediction > thresh) & (truth == 0) ~ 1,\n    TRUE ~ 0)) %>% \n  mutate(TN = case_when(\n    (prediction <= thresh) & (truth == 0) ~ 1,\n    TRUE ~ 0)) %>% \n  mutate(FN = case_when(\n    (prediction < thresh) & (truth == 1) ~ 1,\n    TRUE ~ 0)) %>% \n  select(all_of(c(\"TP\", \"FP\", \"TN\", \"FN\"))) %>% \n  colSums()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  TP   FP   TN   FN \n  84 7712 3424   12 \n```\n:::\n:::\n\n\n\nCalculate ROC curves and AUC\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ROC curves\nroc_curves_basic = map2(pred_basic, seq(length(pred_basic)), \n                        function(pred, i){\n    r = roc_curve(pred, truth, prediction, event_level = \"second\")\n    r = r %>% \n      mutate(mice_set = i)\n  }) %>% \n  bind_rows()\n\n# PR curves\npr_curves_basic = map2(pred_basic, seq(length(pred_basic)), \n                        function(pred, i){\n    r = pr_curve(pred, truth, prediction, event_level = \"second\")\n    r = r %>% \n      mutate(mice_set = i)\n  }) %>% \n  bind_rows()\n\n# AUC\nauc_basic = map2(pred_basic, seq(length(pred_basic)), \n                        function(pred, i){\n                          \n    r = pROC::roc(pred$truth, pred$prediction)\n    auc_int = pROC::ci.auc(r)\n    auc_est = pROC::auc(r)\n    \n#    r2 = roc_curve(pred_basic[[1]], truth, prediction, event_level = \"second\")\n    auc = roc_auc(pred, truth, prediction, event_level = \"second\")\n    \n    auc = auc %>% mutate(auc_lower = auc_int[[1]],\n                     auc_upper = auc_int[[3]],\n                     auc_alt = auc_est[[1]],\n                     auc_se = (auc_int[[3]]-auc_int[[1]])/3.92\n    ) %>% \n      mutate(mice_set = i)\n  }) %>% \n  bind_rows()\n\n# PRAUC\nauprc_basic = map2(pred_basic, seq(length(pred_basic)), \n                        function(pred, i){\n                          \n\n    auc = pr_auc(pred, truth, prediction, event_level = \"second\") %>% \n      mutate(mice_set = i)\n  }) %>% \n  bind_rows()\n\n# Pooled AUC\n# Usin Rubin's rules to pool the AUC estimate and SE\n\npooled_estimate = auc_basic$.estimate %>% mean()\nvar_within = auc_basic$auc_se %>% mean()\nvar_between = auc_basic$.estimate %>% var()\npooled_se = var_within+var_between*(1+1/nrow(auc_basic))\npooled_ci = pooled_se*3.92/2.\npooled_auc_basic = data.frame(\"pooled_estimate\" = pooled_estimate,\n                              \"pooled_lower\" = pooled_estimate-pooled_ci,\n                              \"pooled_upper\" = pooled_estimate+pooled_ci,\n                              \"pooled_se\" = pooled_se)\n\n# Pooled AUPRC\n\npooled_prauc_basic = auprc_basic$.estimate %>% mean()\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## ROC curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_rows(\n  roc_curves_basic %>% mutate(explanatory = \"info\"),\n  roc_curves_all %>% mutate(explanatory = \"info+LDA\")\n) %>% \n  #filter(mice_set == 1 | mice_set == 2) %>% \n  ggplot(aes(x = 1-specificity, y=sensitivity, group = mice_set, color = explanatory))+\n  geom_path( linewidth = 0.2)+\n  geom_abline(linetype=3)\n```\n\n::: {.cell-output-display}\n![](baseline_LR_model_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nThe pooled AUC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_rows(\n  pooled_auc_basic %>% mutate(explanatory = \"info\"),\n  pooled_auc_all %>% mutate(explanatory = \"info+LDA\")) %>% \n  select(explanatory, pooled_estimate, pooled_lower, pooled_upper) %>% \n  mutate(pooled_estimate = round(pooled_estimate, 3)) %>% \n  mutate(pooled_lower = round(pooled_lower, 3)) %>% \n  mutate(pooled_estimate = round(pooled_estimate, 3)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  explanatory pooled_estimate pooled_lower pooled_upper\n1        info           0.719        0.662    0.7752307\n2    info+LDA           0.769        0.713    0.8248186\n```\n:::\n:::\n\n\n## Precision-recall curves and AUPRC\n\n\n::: {.cell}\n\n```{.r .cell-code}\npr_curves_basic %>% \n  mutate(explanatory = \"info\") %>% \n  ggplot(aes(x=recall, y=precision, group = mice_set, color = explanatory))+\n  geom_path(linewidth = 0.2) +\n  geom_path(data = pr_curves_all %>% \n  mutate(explanatory = \"info+LDA\", size = 0.2))\n```\n\n::: {.cell-output-display}\n![](baseline_LR_model_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nThe Pooled AUPRC is 0.025 for the info and 0.138 for info with LDA\n\n## Risk tables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prognos function for automatic table generation ---------------------------------------\nprognos <- function(.data, estimate, truth){\n  .estimate = sym(estimate)\n  .truth = sym(truth) \n  .data %>% \n    drop_na(!! .estimate, !! .truth) %>% \n    summarise(\n      N = n(),\n      TP = sum(!! .truth == 1 & !! .estimate == 1),\n      TN = sum(!! .truth == 0  & !! .estimate == 0),\n      FP = sum(!! .truth == 0  & !! .estimate == 1),\n      FN = sum(!! .truth == 1  & !! .estimate == 0),\n      Sens = sens(., !! .truth, !! .estimate)$.estimate,\n      Spec = spec(., !! .truth, !! .estimate)$.estimate,\n      PPV = ppv(., !! .truth, !! .estimate)$.estimate,\n      NPV = npv(., !! .truth, !! .estimate)$.estimate,\n      above = paste0(TP + FP, \" (\", ((100*(TP + FP))/N) %>% round_tidy(1), \")\"),\n      below = paste0(TN + FN, \" (\", ((100*(TN + FN))/N) %>% round_tidy(1), \")\")\n    ) %>% \n    mutate_at(vars(\"Sens\", \"Spec\", \"PPV\", \"NPV\"), ~ prod(., 100)) %>% \n    mutate(across(c(everything(), -above, -below), round, digits = 1))\n}\n\n\n# Rule out table ---------------------------------------------------------\n## These tables could be combined\n## Set cut-offs\n\ntbl_ruleout_basic = pred_basic %>% \n  map(~ mutate(., subjid = seq(nrow(.)))) %>% \n  bind_rows() %>% \n  group_by(subjid) %>% \n  summarise(\n    estimate = mean(prediction),\n    truth = first(truth)\n  ) %>% \n  \n  mutate(\n    cutoff2 = case_when(\n      estimate <= 0.005 ~ 0,\n      estimate > 0.005 ~ 1,\n      TRUE ~ NA_real_) %>%\n      factor(),\n    cutoff3 = case_when(\n      estimate <= 0.01 ~ 0,\n      estimate > 0.01 ~ 1,\n      TRUE ~ NA_real_) %>%\n      factor(),\n    cutoff4 = case_when(\n      estimate <= 0.02 ~ 0,\n      estimate > 0.02 ~ 1,\n      TRUE ~ NA_real_) %>%\n      factor(),\n    cutoff5 = case_when(\n      estimate <= 0.03 ~ 0,\n      estimate > 0.03 ~ 1,\n      TRUE ~ NA_real_) %>%\n      factor(),\n    cutoff6 = case_when(\n      estimate <= 0.04 ~ 0,\n      estimate > 0.04 ~ 1,\n      TRUE ~ NA_real_) %>%\n      factor(),\n    cutoff7 = case_when(\n      estimate <= 0.05 ~ 0,\n      estimate > 0.05 ~ 1,\n      TRUE ~ NA_real_) %>%\n      factor()#,\n#    cutoff8 = case_when(\n#      estimate <= 0.1 ~ 0,\n#      estimate > 0.1 ~ 1,\n#      TRUE ~ NA_real_) %>%\n#      factor()#,\n#    cutoff9 = case_when(\n#      estimate <= 0.2 ~ 0,\n#      estimate > 0.2 ~ 1,\n#      TRUE ~ NA_real_) %>%\n#      factor(),     \n#    cutoff10 = case_when(\n#      estimate <= 0.5 ~ 0,\n#      estimate > 0.5 ~ 1,\n#      TRUE ~ NA_real_) %>%\n#      factor()\n  ) %>% \n  select(truth, dplyr::starts_with(\"cutoff\")) %>% \n  mutate(truth  = factor(truth))\n\nmap_df(list(\n  \"<=0.005\" = \"cutoff2\",\n  \"<=0.01\" = \"cutoff3\",\n  \"<=0.02\" = \"cutoff4\",\n  \"<=0.03\" = \"cutoff5\",\n  \"<=0.04\" = \"cutoff6\",\n  \"<=0.05\" = \"cutoff7\"#,\n#  \"<=8\" = \"cutoff8\",\n#  \"<=9\" = \"cutoff9\",\n#  \"<=10\" = \"cutoff10\"\n),\n~ prognos(tbl_ruleout_basic, .x, \"truth\"), .id= \"threshold\") #%>%\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 12\n  threshold     N    TP    TN    FP    FN  Sens  Spec   PPV   NPV above    below\n  <chr>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <chr>    <chr>\n1 <=0.005   11232    82  3617  7519    14  32.5  85.4  99.6   1.1 7601 (6… 3631…\n2 <=0.01    11232    69  7434  3702    27  66.8  71.9  99.6   1.8 3771 (3… 7461…\n3 <=0.02    11232    23 10488   648    73  94.2  24    99.3   3.4 671 (6.… 1056…\n4 <=0.03    11232     7 10964   172    89  98.5   7.3  99.2   3.9 179 (1.… 1105…\n5 <=0.04    11232     2 11082    54    94  99.5   2.1  99.2   3.6 56 (0.5) 1117…\n6 <=0.05    11232     1 11108    28    95  99.7   1    99.2   3.4 29 (0.3) 1120…\n```\n:::\n\n```{.r .cell-code}\n#  mytable(caption = \"Sensitivity, specificity, postitive predicive value and negative predictive value for Isaric score cut-offs for mortality\")\n```\n:::\n",
    "supporting": [
      "baseline_LR_model_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.29/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/dt-ext-buttons-1.13.4/css/buttons.dataTables.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-ext-buttons-1.13.4/js/dataTables.buttons.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.4/js/buttons.html5.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.4/js/buttons.colVis.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.4/js/buttons.print.min.js\"></script>\n<link href=\"site_libs/nouislider-7.0.10/jquery.nouislider.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/nouislider-7.0.10/jquery.nouislider.min.js\"></script>\n<link href=\"site_libs/selectize-0.12.0/selectize.bootstrap3.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/selectize-0.12.0/selectize.min.js\"></script>\n<link href=\"site_libs/dt-plugin-searchhighlight-1.13.4/source.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-plugin-searchhighlight-1.13.4/jquery.highlight.js\"></script>\n<script src=\"site_libs/dt-plugin-searchhighlight-1.13.4/source.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}